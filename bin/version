#!/usr/bin/env php
<?php

if ($argc < 2) {
    throw new ArgumentCountError();
}

define('SECRET_TOKEN', (string) $argv[1]);

$version_file = dirname(__DIR__).'/version';

$version = '1.0.0';

if (file_exists($version_file)) {
    $version = file_get_contents($version_file);
    $content['sha'] = '';
}

[$major, $minor, $patch] = explode('.', $version);

if (isset($argv[2])) {
    echo "Invalid argument input";
    exit(1);
}

$patch = (int) $patch + 1;
$version = "{$major}.{$minor}.{$patch}";

$baseUrl = 'https://skmetheloper:'.SECRET_TOKEN.'@api.github.com/repos/skmetheloper/ci-action-testing';
$targetUrl = $baseUrl.'/contents/version';

$content['message'] = 'Updated '.'patch'.'@'.$version.' on '.date('d-m-Y H:i:s Z');
$content['content'] = base64_encode($version);

$result = curl_post($targetUrl, $content);

var_dump($result);

function curl_post(string $url, array $data
  $options = [
    CURLOPT_POST => 1, 
    CURLOPT_HEADER => 0, 
    CURLOPT_URL => $url, 
    CURLOPT_FRESH_CONNECT => 1, 
    CURLOPT_RETURNTRANSFER => 1, 
    CURLOPT_FORBID_REUSE => 1, 
    CURLOPT_TIMEOUT => 4, 
    CURLOPT_POSTFIELDS => http_build_query($data)
  ];
  $ch = curl_init();
  curl_setopt($ch, $options);
  $result = curl_exec($ch);
  if (! $result) {
    $error = [
      'err' => curl_error($ch)
    ];
  }
  curl_close($ch);
  return $result ?: $error;
}
